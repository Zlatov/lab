<?php

// mode | Чтение  | Запись  | Указатель в         | Создаёт файл
//  r   |    +    |         |  начало             |   
//  r+  |    +    |    +    |  начало             |   
//  w   |         |    +    |  начало и обрезает  |   +
//  w+  |    +    |    +    |  начало и обрезает  |   +
//  a   |         |    +    |  конец              |   +
//  a+  |    +    |    +    |  конец              |   +
//  x   |         |    +    |  начало             |   + и ошибка если есть
//  x+  |    +    |    +    |  начало             |   + и ошибка если есть
//  c   |         |    +    |  начало             |   +
//  c+  |    +    |    +    |  начало             |   +

// x - Создаёт и открывает только для записи; помещает указатель в начало файла.
// Если файл уже существует, вызов fopen() закончится неудачей, вернёт FALSE и
// выдаст ошибку уровня E_WARNING. Если файл не существует, попытается его
// создать. Это эквивалентно указанию флагов O_EXCL|O_CREAT для внутреннего
// системного вызова open(2).
// 
// `x+` - Создаёт и открывает для чтения и записи; в остальном имеет то же
// поведение, что и'x'.
// 
// `c` - Открывает файл только для записи. Если файл не существует, то он
// создается. Если же файл существует, то он не обрезается (в отличие от 'w'), и
// вызов к этой функции не вызывает ошибку (также как и в случае с 'x').
// Указатель на файл будет установлен на начало файла. Это может быть полезно
// при желании заблокировать файл (см. flock()) перед изменением, так как
// использование 'w' может обрезать файл еще до того как была получена
// блокировка (если вы желаете обрезать файл, можно использовать функцию
// ftruncate() после запроса на блокировку).
// 
// `c+` - Открывает файл для чтения и записи; в остальном имеет то же поведение,
// что и 'c'.
// 
// `e` - Установить флаг close-on-exec (закрыть при запуске) на открытый
// файловый дескриптор. Доступно только в PHP скомпилированном на системах
// поддерживающих POSIX.1-2008.
// 
// Windows предлагает флаг режима текстовой трансляции ('t'), который
// автоматически переведёт \n в \r\n во время работы с файлом. И наоборот - вы
// также можете использовать 'b', чтобы принудительно включить бинарный режим, в
// котором ваши данные не будут преобразовываться. Чтобы использовать эти
// режимы, укажите 'b' или 't' последней буквой параметра mode.

// rmdir(__DIR__ . DIRECTORY_SEPARATOR . 'temp_file');
exec('rm -rf ' . __DIR__ . DIRECTORY_SEPARATOR . 'temp_file');
$test_folder = __DIR__ . DIRECTORY_SEPARATOR . 'temp_file' . DIRECTORY_SEPARATOR . 'asd';
// rwxrwxrwx
// 111100100
mkdir($test_folder, 0744, $recursive = true);
$file = fopen($test_folder . DIRECTORY_SEPARATOR . 'log.txt', 'ab');
for ($i=0; $i < 10; $i++) {
    $a = fwrite($file, $i . PHP_EOL);
    echo '$a: ' . print_r($a, true) . PHP_EOL;
}
fclose($file);
exit;


file_put_contents('temp', print_r(["asd" => 0], true));
echo '__DIR__: ' . var_export(__DIR__, true) . PHP_EOL;
file_put_contents('/home/iadfeshchm/projects/my/lab/php/file_put_contents/temp.txt', print_r(["asd" => 0], true));
