<?php
$a = new \ArrayObject(["b"=>1,"a"=>0]);
echo "<pre>";
print_r($a);
echo "</pre>";

$a->ksort();

$a->append(); //           | Добавляет значение в конец массива                                          
$a->asort(); //            | Сортирует записи по значению                                                
$a->__construct(); //      | Создает новый объект типа массив                                            
$a->count(); //            | Возвращает количество публичных свойств ArrayObject                         
$a->exchangeArray(); //    | Заменяет текущий массив на другой                                           
$a->getArrayCopy(); //     | Создаёт копию ArrayObject                                                   
$a->getFlags(); //         | Получает флаги поведения                                                    
$a->getIterator(); //      | Создаёт новый итератор из экземпляра ArrayObject                            
$a->getIteratorClass(); // | Возвращает имя класса итератора для ArrayObject                             
$a->ksort(); //            | Сортирует записи по ключам                                                  
$a->natcasesort(); //      | Сортирует массив, используя регистронезависимый алгоритм "natural order"    
$a->natsort(); //          | Сортирует массив, используя алгоритм "natural order"                        
$a->offsetExists(); //     | Проверяет, существует ли указанный индекс                                   
$a->offsetGet(); //        | Возвращает значение по указанному индексу                                   
$a->offsetSet(); //        | Устанавливает новое значение по указанному индексу                          
$a->offsetUnset(); //      | Удаляет значение по указанному индексу                                      
$a->serialize(); //        | Сериализует ArrayObject                                                     
$a->setFlags(); //         | Устанавливает флаги поведения                                               
$a->setIteratorClass(); // | Устанавливает имя класса итератора для ArrayObject                          
$a->uasort(); //           | Сортирует, используя пользовательскую для сравнения элементов и сохраняя при этом связь кл/знач
$a->uksort(); //           | Сортирует массив по ключам, используя пользовательскую функцию для сравнения
$a->unserialize(); //      | Десериализует ArrayObject                                                   

echo "<pre>";
print_r( $a );
echo "</pre>";
// $a->each();

die();

