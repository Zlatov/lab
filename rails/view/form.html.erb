<%= form_for article, url: {action: "update"} do |f| %>




  <!--
    Текст (input)
  -->

  <div class="grid row field_row <%= @new_client.class.field_show_with_form(:fio) %>">
    <div class="col-3">
      <div class="wrap shred padded"><%= cl.label :fio, class: with_required(@new_client, :fio) %></div>
    </div>
    <div class="col-9">
      <div class="wrap shred padded">
        <%= cl.text_field :fio %>
        <%= field_errors @new_client, :fio %>
      </div>
    </div>
  </div>




  <!--
    Селект
  -->

  <%= f.select :slide_event_hidden, [["Скрыт","true"],["Виден","false"]] %>
  <!--
    Чтобы задать выбранные:
    при использовании options_for_select:
      - вручную добавив как хэш: selected: ...
      - вручную добавив как второй параметр: , ...
    при передаче массива вместо использования options_for_select:
      - хелпер form.select автоматически выберет как в модели.
  -->
  <%= f.select :pickup_affiliate_id, @affiliate_select_options, include_blank: true, disabled: [33, 60] %>
  <%= f.select :pickup_affiliate_id, @affiliate_select_options, {}, {'data-initial_client_id': @current_client.id} %>
  <!-- Наиболее полный хелпер form.select -->
  <%=
    form.select :field_name,
      options_for_select(
        [
          ['Надпись 1', 'значение1', {'data-custom_html_attribute' => '1'}],
          ['Надпись 2', 'значение2', {'data-custom_html_attribute' => '2'}],
        ],
        disabled: ['значение2', 2],
        selected: 1
      ),
      {
        include_blank: true,
        # prompt: 'Выберите',
      },
      {
        multiple: true,
        size: 9,
        'data-custom_html_attribute' => '1'
      }
  %>
  <%=
    select_tag(
      :emails,
      options_for_select(
        [
          ['asd@asd.asd', 'asd@asd.asd'],
          ['Администратору', 'zxc@zxc.zxc']
        ],
        'zxc@zxc.zxc' # Если необходимо задать только selected, то передаем вторым параметром.
      ),
      multiple: true,
      prompt: 'Выберите email',
      title: 'Выбрать другогой email.',
      class: 'zenoselect'
    )
    select_tag(
      :emails,
      options_for_select(
        [
          ['asd@asd.asd', 'asd@asd.asd'],
          ['Администратору', 'zxc@zxc.zxc']
        ],
        disabled: 'asd@asd.asd', # Если необходимо задать disabled, то передаем в виде хэш.
        selected: 'zxc@zxc.zxc' # selected в этом случае можно не передавать.
      )
    )
  %>




  <!--
    Флажек
  -->

  <%= f.label :pickup, class: "check_b" do %>
    <%= f.check_box(:pickup) %>
    <span></span>
  <% end %>
  <!--
    Список флажков в случае массива в поле
  -->
  <% for email in form.object.emails %>
    <%= form.check_box :remove_emails, {multiple: true}, email, nil %>
  <% end %>
  <!--
    Список флажков в случае связей
  -->
  <%= form.collection_check_boxes(:role_ids, ::Role.all, :id, :ui_name) %>
  <!-- или -->
  <ul class="zn ul unbullet" style="columns: 4;">
    <%=
      form.collection_check_boxes(
        :affiliate_ids,
        ::Market::Model::Affiliate.published.order(name: :asc),
        :id,
        :ui_name
      ) do |b|
    %>
      <li class="nobr">
        <label class="check_b">
          <%= b.check_box %>
          <span></span>
        </label>
        <%= b.label %>
      </li>
    <% end %>
  </ul>
  <!--
    Простое использование при связываных моделях с помощью
    has_and_belongs_to_many и присутствием экземпляра @users
  -->
  <%= collection_check_boxes(:users, :role_ids, ::Role.all, :id, :ui_name) %>




  <!--
    Радиокнопка
  -->
  <% f.object.class.payment_types.each do |value_s, value_i| %>
    <label>
      <%= f.radio_button :payment_type, value_s %>
    </label>
    <%= f.label :payment_type, f.object.class.human_enum_name(:payment_type, value_s), :value => value_s %>
  <% end %>
  <%= field_errors f.object, :payment_type %>

  <% form.object.class.offer_types.each do |string_value, index_value| %>
    <label class="radio_b">
      <%= form.radio_button :offer_type, string_value, id: "offer_type_#{string_value}" %>
      <span></span>
    </label>
    <%=
      form.label :offer_type,
        form.object.class.human_enum_name(:offer_type, string_value),
        :value => string_value,
        :for => "offer_type_#{string_value}"
    %>
    <br>
  <% end %>
  <%= field_errors form.object, :offer_type %>


  <%= f.hidden_field :id %>

  <%= f.text_field :title %>
  <%= f.submit "Отправить" %>
<% end %>

<%= form_for article, url: {action: "update"}, html: {class: 'ui mini form'} do |f| %>
  <%= f.hidden_field :id %>
  <p class="nobr inline field">
    <%= f.number_field :slide_event_order, html: {class: 'ui input'} %>
    <%= f.button '<i class="save icon"></i>'.html_safe, class: 'ui mini icon button' %>

    <%=
      f.button t('form.delete'),
        type: :submit,
        name: :submit,
        value: :delete_client,
        data: {confirm: 'Вы действительно хотите удалить Клиента?'},
        class: 'button'
    %>
  </p>
<% end %>




  <!--
    Дата, время
  -->
  <%=
    form.datetime_select :from,
    form.date_select :from,
      {
        order: [:year, :month, :day],
        prompt: {
          year: 'выберите Год',
          month: 'Месяц',
          day: 'День',
          # hour: 'Час',
          # minute: 'Мин.',
        },
        start_year: Date.today.year,
        end_year: Date.today.year + 5,
        discard_time: true
      }
  %>




<!--
  Самописная форма
-->

<%= form_tag(subscription_subscriber_path, method: "get", class: "ui mini form", id: "form_subscription") do %>

<%= form_tag exchange1c_manage_path, :method => :post, :class => 'ui mini form', id: 'manage_form' do %>
  <%= hidden_field_tag :on, '0' %>
  <%= check_box_tag :on, '1', @on %>
  <%= button_tag 'Применить', :name => :submit, :type => :submit %>
<% end %>

<form action="<%= subscription_subscriber_read_url(subscriber.id) %>" method="post" class="ui mini form">
  <%
    @angar_list = [["Не выбран", 0]] + Angar.all.map do |e|
      label = e.display_name == e.name ? e.name : "#{e.display_name} (#{e.name})"
      [label, e.id]
    end.sort_by{|e| e[0]}
    @angar_selected = Angar.where(id: params[:angar]).map{|e| e.id}
  %>
</form>
